<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewEvent" xml:space="preserve">
    <value>➕Новое событие</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ChooseEventForDetailsOrAddNew" xml:space="preserve">
    <value>Выберите событие для отображения подробной информации отправив нужную цифру или нажмите на кнопку "Новое событие".</value>
  </data>
  <data name="ClickButtonForAction" xml:space="preserve">
    <value>Нажмите на нужную кнопку для действия.</value>
  </data>
  <data name="DeleteEvent" xml:space="preserve">
    <value>🗑️ Удалить</value>
  </data>
  <data name="DetailedInfoAboutEvent" xml:space="preserve">
    <value>Событие: {0},
Поздравляемый: {1},
Дата: {2},
Время: {3}.</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>✅Готово</value>
  </data>
  <data name="EditDate" xml:space="preserve">
    <value>Изменить дату</value>
  </data>
  <data name="EditEvent" xml:space="preserve">
    <value>✏️ Редактировать</value>
  </data>
  <data name="EditName" xml:space="preserve">
    <value>Изменить название</value>
  </data>
  <data name="EditPerson" xml:space="preserve">
    <value>Изменить поздравляемого</value>
  </data>
  <data name="EditTime" xml:space="preserve">
    <value>Изменить время</value>
  </data>
  <data name="EmptyPhoneNumber" xml:space="preserve">
    <value>Пожалуйста, поделитесь вашим контактом для регистрации в нашей системе:</value>
  </data>
  <data name="EmptyTimeZone" xml:space="preserve">
    <value>Отправьте свое местоположение, для определения вашего часового пояса. Мы не сохраняем и не передаем ваше местоположение:</value>
  </data>
  <data name="EventWasSuccessfulAdded" xml:space="preserve">
    <value>Событие было успешно добавлено!</value>
  </data>
  <data name="IncorrectDateTryAgain" xml:space="preserve">
    <value>Что-то случилось и я не могу распознать дату в вашем сообщении, пожалуйста попробуйте снова. 
Отправьте дату события в следующем формате: дд/мм/гггг</value>
  </data>
  <data name="IncorrectNumberOfEventTryAgain" xml:space="preserve">
    <value>Что-то случилось и я не могу распознать номер события в вашем сообщении, пожалуйста попробуйте снова.</value>
  </data>
  <data name="IncorrectTimeTryAgain" xml:space="preserve">
    <value>Что-то случилось и я не могу распознать время в вашем сообщении, пожалуйста попробуйте снова. 
Отравьте время события, чтобы напомнить вам о нём в нужное время. Формат сообщения: чч:мм</value>
  </data>
  <data name="InfoAboutEvent" xml:space="preserve">
    <value>Информация о событии:
</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Выберите ваш язык:</value>
  </data>
  <data name="ListOfEvents" xml:space="preserve">
    <value>📄 События</value>
  </data>
  <data name="NonePerson" xml:space="preserve">
    <value>Никто</value>
  </data>
  <data name="SendCommandForCreatingEvent" xml:space="preserve">
    <value>Теперь вы можете создавать, просматривать, удалять и редактировать свои события. На клавиатуре в этом чате вы можете увидеть кнопки. Нажмите на нужную кнопку для действия.</value>
  </data>
  <data name="SendDateOfEvent" xml:space="preserve">
    <value>Отправьте дату события в следующем формате: дд/мм/гггг</value>
  </data>
  <data name="SendNameOfEvent" xml:space="preserve">
    <value>Отправьте название события</value>
  </data>
  <data name="SendNameOfPerson" xml:space="preserve">
    <value>Отправьте имя человека, которого будете поздравлять или нажмите "Никто"</value>
  </data>
  <data name="SendTimeOfEvent" xml:space="preserve">
    <value>Отравьте время события, чтобы напомнить вам о нём в нужное время. Формат сообщения: чч:мм</value>
  </data>
  <data name="SharePhoneNumber" xml:space="preserve">
    <value>Отправить контакт</value>
  </data>
  <data name="ShareTimeZone" xml:space="preserve">
    <value>Отправить локацию</value>
  </data>
  <data name="StringBuilderList" xml:space="preserve">
    <value>{0}) Событие: "{1}". Дата: {2}</value>
  </data>
  <data name="SuccessfulRegistration" xml:space="preserve">
    <value>Вы успешно зарегестрировались, {0}!
Ваша времянная зона - {1}, ваше время сейчас - {2}.</value>
  </data>
</root>